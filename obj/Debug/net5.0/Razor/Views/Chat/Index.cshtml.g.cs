#pragma checksum "C:\Users\furst\Desktop\Chat_Blue_teste_2\Chat_Blue\Views\Chat\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "5773b4d2ac5f3f8f65ca47f2ddb29095281af80d"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Chat_Index), @"mvc.1.0.view", @"/Views/Chat/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\furst\Desktop\Chat_Blue_teste_2\Chat_Blue\Views\_ViewImports.cshtml"
using Chat_Blue;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\furst\Desktop\Chat_Blue_teste_2\Chat_Blue\Views\_ViewImports.cshtml"
using Chat_Blue.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"5773b4d2ac5f3f8f65ca47f2ddb29095281af80d", @"/Views/Chat/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a7dd2407eb2cde9dfeea3d6c9093747c37187d60", @"/Views/_ViewImports.cshtml")]
    public class Views_Chat_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<Message>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "SendMessage", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("SendMessageForm"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("row"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 3 "C:\Users\furst\Desktop\Chat_Blue_teste_2\Chat_Blue\Views\Chat\Index.cshtml"
  
    //instancia os objetos abaixo
    var messages = ViewBag.Messages as List<Message>;
    var username = ViewBag.CurrentUserName as string;
    var privateMessageUrl = "/Chat/PrivateMessage/";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<style>

    * {
        box-sizing: border-box;
        font-size: 16px;
        font-family: 'Lato', sans-serif;
    }

    .widget-chat {
        position: fixed;
        right: 90px;
        bottom: 90px;
    }

    .widget-container {
        position: relative;
    }

    .widget-button {
        width: 60px;
        height: 60px;
        background-image: linear-gradient( 109.6deg, rgba(116,18,203,1) 11.2%, rgba(230,46,131,1) 91.2% );
        border-radius: 30px;
        position: absolute;
        right: 0;
        bottom: 0;
        cursor: pointer;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .chat-open {
        fill: #fff;
        width: 35px;
        height: 35px;
    }

    .close-chat {
        fill: #fff;
        width: 35px;
        height: 35px;
        display: none;
        -webkit-animation: close-chat 1.9s ease-in-out both;
        animation: close-chat 1.9s ease-in-out both;
    }

    .w");
            WriteLiteral(@"idget-content {
        visibility: hidden;
        opacity: 0;
        transition: .4s;
        width: 300px;
        height: clamp(300px, 70vh, 445px);
        overflow: hidden;
        border-radius: 5px;
        box-shadow: 0 7px 30px -10px rgba(150,170,180,0.5);
        position: absolute;
        bottom: 75px;
        right: 0;
    }

    .widget-title {
        display: flex;
        align-items: center;
        padding: 15px;
        background-image: linear-gradient( 109.6deg, rgba(116,18,203,1) 11.2%, rgba(230,46,131,1) 91.2% );
    }

        .widget-title span, strong {
            color: #fff;
            display: block;
        }

        .widget-title figure {
            margin: 0 15px 0 0;
        }

    .widget-thumb {
        width: 50px;
        height: 50px;
        border-radius: 30px;
        border: 5px solid #fff
    }

    .play-chat {
        padding: 4px;
        border-radius: 5px;
        background: #f5f5f5;
        color: #bdbcbc;
     ");
            WriteLiteral(@"   margin: 0 20px;
        text-align: center;
        margin-bottom: 20px;
        font-size: 13px;
    }

    .widget-container-dialog {
        display: flex;
        flex-direction: column;
        justify-content: flex-end;
        height: 75%;
    }

    .interaction-container {
        padding: 0 15px;
        height: 76%;
        display: flex;
        flex-direction: column;
        justify-content: flex-end;
        overflow: hidden;
        overflow-y: auto;
        scrollbar-width: thin;
        scrollbar-color: #E98973 #9c27b0;
    }

        .interaction-container::-webkit-scrollbar {
            width: 12px;
        }

        .interaction-container::-webkit-scrollbar-track {
            background: #E7D4C0;
            border-radius: 0;
        }

        .interaction-container::-webkit-scrollbar-thumb {
            background-color: #9c27b0;
            border-radius: 0;
        }

    .interaction {
        margin: 15px 0
    }

        .interaction");
            WriteLiteral(@".client {
            display: flex;
            justify-content: flex-end;
            align-items: center;
        }

            .interaction.client .dot {
                width: 10px;
                height: 10px;
                border-radius: 10px;
                background: #ccc;
                margin-left: 5px;
            }

            .interaction.client p {
                background: #ccc;
                color: #000;
                border-radius: 10px;
                border-top-right-radius: 0;
                padding: 10px;
                margin: 0;
            }

        .interaction.agent {
            display: flex;
            justify-content: flex-start;
            align-items: center;
        }

            .interaction.agent .photo figure {
                margin: 0;
            }

            .interaction.agent p {
                background-image: linear-gradient( 109.6deg, rgba(116,18,203,1) 11.2%, rgba(230,46,131,1) 91.2% );
                co");
            WriteLiteral(@"lor: #fff;
                border-radius: 10px;
                border-top-left-radius: 0;
                padding: 10px;
                margin: 0;
            }

    .send-message {
        display: flex;
        align-items: center;
        justify-content: center;
        padding-top: 3px;
    }

        .send-message svg {
            fill: #555
        }

    .send-message-input {
        width: 225px;
        height: 35px;
        padding: 0 15px;
        border-radius: 35px;
        border: 1px solid #ccc;
        margin: 0 5px;
    }

        .send-message-input:focus {
            outline: none;
            background: #f9f9f9;
        }

    .widget-input-open {
        display: none;
    }

        .widget-input-open:checked ~ .widget-content {
            visibility: visible;
            opacity: 1;
        }

        .widget-input-open:checked + .widget-button .chat-open {
            display: none;
        }

        .widget-input-open:checked + .wid");
            WriteLiteral(@"get-button .close-chat {
            display: block;
        }


    .chat {
        max-height: 260px;
        overflow-y: scroll;
        border: 1px solid silver;
    }

        .chat::-webkit-scrollbar {
            width: 5px;
        }

        .chat::-webkit-scrollbar-thumb {
            box-shadow: inset 0 0 6px rgba(0,0,0,.3);
            background-color: silver;
        }
</style>



<!--
Front-End Design
Ui Design
Website: www.cupcom.com.br
-->
<link rel=""preconnect"" href=""https://fonts.gstatic.com"">
<link href=""https://fonts.googleapis.com/css2?family=Lato:wght@300;400;700&display=swap"" rel=""stylesheet"">
<div class=""widget-chat"">
    <div class=""widget-container"">
        <label class=""widget-open"" for=""widget-open"">
            <input class=""widget-input-open"" id=""widget-open"" type=""checkbox"" name=""widget-open-chat"" />
            <div class=""widget-button"">
                <svg xmlns=""http://www.w3.org/2000/svg"" class=""close-chat"" height=""24"" viewBox=""0 0 24 2");
            WriteLiteral(@"4"" width=""24""><path d=""M0 0h24v24H0z"" fill=""none"" /><path d=""M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"" /></svg>
                <svg xmlns='http://www.w3.org/2000/svg' class='ionicon chat-open' viewBox='0 0 512 512'><title>Chatbubble</title><path d='M76.83 480a25.69 25.69 0 01-25.57-25.74 29.13 29.13 0 011.2-7.63L70.88 380c.77-2.46-.1-4.94-1.23-6.9l-.22-.4c-.08-.13-.46-.66-.73-1.05s-.58-.81-.86-1.22l-.19-.27A215.66 215.66 0 0132 251.37c-.18-57.59 22.35-112 63.46-153.28C138 55.47 194.9 32 255.82 32A227.4 227.4 0 01398 81.84c39.45 31.75 66.87 76 77.21 124.68a213.5 213.5 0 014.78 45c0 58.93-22.64 114.28-63.76 155.87-41.48 42-97.18 65.06-156.83 65.06-21 0-47.87-5.36-60.77-9-15.52-4.34-30.23-10-31.85-10.6a15.12 15.12 0 00-5.37-1 14.75 14.75 0 00-5.8 1.15l-.85.33-67.48 24.38A29.</label>44 29.44 0 0176.83 480zm-2-31.8zM87.48 380z' /></svg>

            </div>

            <div class=""widget-content"">
                <div class=""widget-title"">
      ");
            WriteLiteral("              <figure>\r\n");
            WriteLiteral(@"                    </figure>
                    <div>
                        <strong>Olá</strong>
                        <span>Bem vindo(a) ao Chat da Blue!</span>
                    </div>
                </div>

                <div class=""bg-light chat jumbotron"" id=""chat"">
");
#nullable restore
#line 274 "C:\Users\furst\Desktop\Chat_Blue_teste_2\Chat_Blue\Views\Chat\Index.cshtml"
                     if (messages != null)
                    {
                        

#line default
#line hidden
#nullable disable
#nullable restore
#line 276 "C:\Users\furst\Desktop\Chat_Blue_teste_2\Chat_Blue\Views\Chat\Index.cshtml"
                         foreach (var message in messages.OrderBy(m => m.Datetime))// para cada mensagen na minha lista de mensagens ordenadas por datatime
                        {
                            var position = username == message.UserName ? "text-right" : "text-left";//se o usuario que enviou a mensagem for igual ao usuario que esta na mensagem vou alinhar a direita se não alianho a esquerda 
                            var alert = username == message.UserName ? "alert-info" : "alert-secondary";//

#line default
#line hidden
#nullable disable
            WriteLiteral("                            <div class=\"row\">\r\n                                <div");
            BeginWriteAttribute("class", " class=\"", 8442, "\"", 8469, 2);
            WriteAttributeValue("", 8450, "col-md-12", 8450, 9, true);
#nullable restore
#line 281 "C:\Users\furst\Desktop\Chat_Blue_teste_2\Chat_Blue\Views\Chat\Index.cshtml"
WriteAttributeValue(" ", 8459, position, 8460, 9, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(">\r\n                                    <small class=\"text-dark\">");
#nullable restore
#line 282 "C:\Users\furst\Desktop\Chat_Blue_teste_2\Chat_Blue\Views\Chat\Index.cshtml"
                                                        Write(message.UserName);

#line default
#line hidden
#nullable disable
            WriteLiteral("</small>\r\n                                    <div");
            BeginWriteAttribute("class", " class=\"", 8601, "\"", 8634, 4);
            WriteAttributeValue("", 8609, "alert", 8609, 5, true);
            WriteAttributeValue(" ", 8614, "mb-0", 8615, 5, true);
#nullable restore
#line 283 "C:\Users\furst\Desktop\Chat_Blue_teste_2\Chat_Blue\Views\Chat\Index.cshtml"
WriteAttributeValue(" ", 8619, alert, 8620, 6, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue(" ", 8626, "d-block", 8627, 8, true);
            EndWriteAttribute();
            WriteLiteral(" role=\"alert\">\r\n                                        <span class=\"mb-0 d-block\" style=\"word-wrap: break-word;\">");
#nullable restore
#line 284 "C:\Users\furst\Desktop\Chat_Blue_teste_2\Chat_Blue\Views\Chat\Index.cshtml"
                                                                                             Write(message.Text);

#line default
#line hidden
#nullable disable
            WriteLiteral("</span>\r\n                                    </div>\r\n                                    <small class=\"text-info\">");
#nullable restore
#line 286 "C:\Users\furst\Desktop\Chat_Blue_teste_2\Chat_Blue\Views\Chat\Index.cshtml"
                                                        Write(message.Datetime.ToString("dd/MM HH:mm"));

#line default
#line hidden
#nullable disable
            WriteLiteral("</small>\r\n                                </div>\r\n                            </div>\r\n");
#nullable restore
#line 289 "C:\Users\furst\Desktop\Chat_Blue_teste_2\Chat_Blue\Views\Chat\Index.cshtml"
                        }

#line default
#line hidden
#nullable disable
#nullable restore
#line 289 "C:\Users\furst\Desktop\Chat_Blue_teste_2\Chat_Blue\Views\Chat\Index.cshtml"
                         
                    }

#line default
#line hidden
#nullable disable
            WriteLiteral("                </div>\r\n                <div class=\"send-message\">\r\n                    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5773b4d2ac5f3f8f65ca47f2ddb29095281af80d16257", async() => {
                WriteLiteral(@"
                        <div class=""input-group col-md-12 mb-4"">
                            <input name=""Text"" id=""MessageText"" class=""form-control"" />
                            <button type=""submit"" id=""submitBtn"" class=""btn btn-info"">Enviar</button>
                        </div>
                    ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Action = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                </div>


            </div>
    </div>
    </label>
</div>


<div  align-items: center; justify-content: center"">

    <img src=""https://blueedtech.com.br/wp-content/themes/blue/dist/images/logo-blue-croped.gif"" style=""width:1000px; height:400px;""/>  
</div>


");
            DefineSection("scripts", async() => {
                WriteLiteral("\r\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/3.1.7/signalr.min.js\"></script>\r\n        <script src=\"https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js\"></script>\r\n\r\n        <script>\r\n            var username = \"");
#nullable restore
#line 320 "C:\Users\furst\Desktop\Chat_Blue_teste_2\Chat_Blue\Views\Chat\Index.cshtml"
                       Write(username);

#line default
#line hidden
#nullable disable
                WriteLiteral("\";\r\n            var privateUrl = \"");
#nullable restore
#line 321 "C:\Users\furst\Desktop\Chat_Blue_teste_2\Chat_Blue\Views\Chat\Index.cshtml"
                         Write(privateMessageUrl);

#line default
#line hidden
#nullable disable
                WriteLiteral(@""";
            var objDiv = document.getElementById(""chat"");
        objDiv.scrollTop = objDiv.scrollHeight;

        var connection = new signalR.HubConnectionBuilder().withUrl(""/chathub"").build();

        function formataData(dateString) {
            var date = new Date(Date.parse(dateString));
            var dateStr =
                (""00"" + date.getDate()).slice(-2) + ""/"" +
                (""00"" + (date.getMonth() + 1)).slice(-2) + "" "" + // ""00"" + 9 -> ""009"" -> ""09"" ; ""00"" + 12 -> ""0012"" -> ""12""
                (""00"" + date.getHours()).slice(-2) + "":"" +
                (""00"" + date.getMinutes()).slice(-2);
            return dateStr;
        }

            connection.on(""ReceiveMessage"", (data) => {
                
            var position = data.userName === username ? ""text-right"" : ""text-left"";
            var alert = data.userName === username ? ""alert-info"" : ""alert-secondary"";

            var message = document.createElement(""div"");
            message.className = ""row"";
");
                WriteLiteral(@"
            var messageCol = document.createElement(""div"");
            messageCol.classList = ""col-md-12 "" + position;

            var messageUser = document.createElement(""small"");
            messageUser.className = ""text-dark"";
            messageUser.textContent = data.userName;

            var messageAlert = document.createElement(""div"");
            messageAlert.classList = ""alert mb-0 d-block "" + alert;
            messageAlert.style = ""word-wrap: break-word;"";

            var messageAlertMessage = document.createElement(""div"");
            messageAlertMessage.className = ""d-block"";
            messageAlertMessage.innerHTML = data.text;

            var messageDt = document.createElement(""small"");
            messageDt.className = ""text-info"";
            messageDt.textContent = formataData(data.datetime);

            messageAlert.appendChild(messageAlertMessage);
            messageCol.appendChild(messageUser);
            messageCol.appendChild(messageAlert);
            ");
                WriteLiteral(@"messageCol.appendChild(messageDt);
            message.appendChild(messageCol);
            console.log(message);
            document.getElementById(""chat"").appendChild(message);
            objDiv.scrollTop = objDiv.scrollHeight;
        });

        connection.start().then(function () {
            console.log(""Connected"");
            
            document.getElementById(""SendMessageForm"").addEventListener(""submit"", function (event) {
                event.preventDefault();

                var data = {
                    Text: document.getElementById(""MessageText"").value,
                    UserName: username
                }

                if (document.getElementById(""MessageText"").value == """") {//não deixa mandar mensagem vazias 
                    alert('Por favor, digite uma mensagem');
                    document.getElementById(""MessageText"").focus();
                    return false
                }
                document.getElementById(""MessageText"").value = """";
");
                WriteLiteral(@"

                connection.invoke(""sendMessage"", data).catch(function (err) {
                    return console.error(err.toString());
                });
            });
        }).catch(function (err) {
            return console.error(err.toString());
        });
        </script>
    ");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<Message> Html { get; private set; }
    }
}
#pragma warning restore 1591
